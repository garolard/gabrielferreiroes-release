{"version":3,"sources":["promise.ts"],"names":["MPromise","MPromise.constructor","MPromise.then","MPromise.manageCallback","MPromise.applyCallback","MPromise.changeState","MPromise.validate","MPromise.reject"],"mappings":"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","file":"promise.js","sourcesContent":["interface IPromise<T> {\r\n\tthen(onFullfilled: (value: T) => any, onRejected: (reason: Error) => any): IPromise<T>;\r\n}\r\n\r\nclass MPromise<T> implements IPromise<T> {\r\n\r\n    private PENDING: number = 0;\r\n    private FULLFILLED: number = 1;\r\n    private REJECTED: number = 2;\r\n    public state: number;\r\n\r\n    public value: any;\r\n    public reason: Error;\r\n\r\n    private callbacksValid: Function[];\r\n    private callbacksRejected: Function[];\r\n\r\n    constructor() {\r\n        this.state = this.PENDING;\r\n        this.callbacksRejected = [];\r\n        this.callbacksValid = [];\r\n    }\r\n\t\r\n    then(onFullfilled?: (value: T) => any, onRejected?: (reason: Error) => any): IPromise<T> {\r\n\t\t\r\n        var p: MPromise<T> = new MPromise<T>();\r\n        \r\n\t\t// Chanined promises mechanisim\r\n\t\tif (!(onFullfilled instanceof Function)) {\r\n\t\t\tonFullfilled = (x) => { return x };\r\n\t\t}\r\n\r\n\t\tthis.manageCallback(p, onFullfilled, this.FULLFILLED);\r\n\r\n\t\tif (!(onRejected instanceof Function)) {\r\n\t\t\tonRejected = (r) => { return r };\r\n\t\t}\r\n\t\tthis.manageCallback(p, onRejected, this.REJECTED);\r\n\t\t\r\n\t\treturn p;\r\n    }\r\n\t\r\n\tprivate manageCallback(p: MPromise<T>, callback: Function, state: number): void {\r\n\t\t\r\n\t\tif (this.state == state) {\r\n\t\t\tthis.applyCallback(p, callback);\r\n\t\t} else { // Pending state\r\n\t\t\tvar wrapper: Function = () => {\r\n\t\t\t\tthis.applyCallback(p, callback);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (state == this.FULLFILLED) {\r\n\t\t\t\tthis.callbacksValid.push(wrapper);\r\n\t\t\t} else {\r\n\t\t\t\tthis.callbacksRejected.push(wrapper);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate applyCallback(p: MPromise<T>, callback: Function): void {\r\n\t\ttry {\r\n\t\t\r\n\t\t\tvar callbackValue: any = callback.call(null, this.value);\r\n\t\t\r\n\t\t\tif (callbackValue instanceof MPromise) {\r\n\t\t\t\tcallbackValue.then(p.validate, p.reject);\r\n\t\t\t}\r\n\t\t\r\n\t\t} catch (e) {\r\n\t\t\tp.reject(new TypeError);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate changeState(state: number, callbacks: Function[], value: any): void {\r\n\t\tif (this.state == this.PENDING) {\r\n\t\t\tthis.state = state;\r\n\t\t\tthis.value = value;\r\n\r\n\t\t\twhile (callbacks.length != 0) {\r\n\t\t\t\tvar f: Function = callbacks.shift();\r\n\t\t\t\tf.call(this, value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validate(x: any): void {\r\n\t\tthis.changeState(this.FULLFILLED, this.callbacksValid, x);\r\n\t}\r\n\r\n\tpublic reject(reason: Error): void {\r\n\t\tthis.changeState(this.REJECTED, this.callbacksRejected, reason);\r\n\t}\r\n\t\r\n}\r\n\r\n// Usage:\r\n// Return a new MPromise instance wherever your API\r\n// make some async work.\r\n// If the work finished correctly call the validate() MPromise\r\n// method with a value if there is one.\r\n// If the work fails call the reject() MPromise with an Error\r\n// object as parameter."],"sourceRoot":"/source/"}