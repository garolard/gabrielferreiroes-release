{"version":3,"sources":["sniptclient.ts"],"names":["SimpleSniptClient","SimpleSniptClient.constructor","SimpleSniptClient.getAllBlogPostsAsync"],"mappings":"AAAA,mCAAmC;AACnC,kCAAkC;AAMlC;IAOIA,2BAAoBA,QAAgBA,EAAUA,MAAcA;QAAxCC,aAAQA,GAARA,QAAQA,CAAQA;QAAUA,WAAMA,GAANA,MAAMA,CAAQA;QACxDA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;QACzBA,IAAIA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;QACrBA,IAAIA,CAACA,IAAIA,GAAGA,uBAAuBA,CAACA;QACpCA,IAAIA,CAACA,KAAKA,GAAGA,SAASA,CAACA;IAC3BA,CAACA;IAEMD,gDAAoBA,GAA3BA;QAEIE,IAAIA,aAAaA,GAA+BA,IAAIA,QAAQA,EAAoBA,CAACA;QAEjFA,IAAIA,UAAUA,GAAWA,IAAIA,CAACA,IAAIA,CAACA;QACxCA,UAAUA,IAAIA,GAAGA,CAACA;QAClBA,UAAUA,IAAIA,IAAIA,CAACA,KAAKA,CAACA;QACzBA,UAAUA,IAAIA,QAAQA,EAAEA,eAAeA;QACvCA,UAAUA,IAAIA,IAAIA,CAACA;QACnBA,UAAUA,IAAIA,WAAWA,CAACA;QAC1BA,UAAUA,IAAIA,IAAIA,CAACA,QAAQA,CAACA;QAC5BA,UAAUA,IAAIA,WAAWA,CAACA;QAC1BA,UAAUA,IAAIA,IAAIA,CAACA,MAAMA,CAACA;QAC1BA,UAAUA,IAAIA,cAAcA,CAACA;QAGxBA,IAAIA,GAAGA,GAAmBA,IAAIA,cAAcA,EAAEA,CAACA;QAC/CA,GAAGA,CAACA,kBAAkBA,GAAGA,UAACA,EAAEA;YACxBA,EAAEA,CAACA,CAACA,GAAGA,CAACA,UAAUA,KAAKA,CAACA,IAAIA,GAAGA,CAACA,MAAMA,KAAKA,GAAGA,CAACA,CAACA,CAACA;gBAC7CA,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,YAAYA,CAACA,CAACA;gBAE5CA,IAAIA,KAAKA,GAAqBA,EAAEA,CAACA;gBACjCA,IAAIA,gBAA0BA,CAACA;gBAC/BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,IAAIA,QAAQA,CAACA,OAAOA,CAACA,CAACA,CAACA;oBAC7BA,EAAEA,CAACA,CAACA,QAAQA,CAACA,OAAOA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBACrCA,IAAIA,OAAOA,GAAmBA,QAAQA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;wBAElDA,EAAEA,CAACA,CAACA,OAAOA,CAACA,SAASA,CAACA,CAACA,CAACA;4BACpBA,KAAKA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;wBACxBA,CAACA;oBACLA,CAACA;gBACLA,CAACA;gBAEDA,aAAaA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA;YAClCA,CAACA;QACLA,CAACA,CAAAA;QACDA,GAAGA,CAACA,OAAOA,GAAGA,UAACA,EAAEA;YACbA,aAAaA,CAACA,MAAMA,CAACA,IAAIA,KAAKA,CAACA,mCAAmCA,CAACA,CAACA,CAACA;QACzEA,CAACA,CAAAA;QAEDA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,EAAEA,UAAUA,EAAEA,IAAIA,CAACA,CAACA;QAClCA,GAAGA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;QAErBA,MAAMA,CAACA,aAAaA,CAACA;IAEnBA,CAACA;IAELF,wBAACA;AAADA,CA7DA,AA6DCA,IAAA","file":"sniptclient.js","sourcesContent":["///<reference path=\"entities.ts\" />\r\n///<reference path=\"promise.ts\" />\r\n\r\ninterface ISniptClient {\r\n\tgetAllBlogPostsAsync(): MPromise<Entities.Snipt[]>;\r\n}\r\n\r\nclass SimpleSniptClient implements ISniptClient {\r\n    \r\n    blogPosts: Entities.Snipt[];\r\n    host: string;\r\n    scope: string;\r\n    request: string;\r\n    \r\n    constructor(private username: string, private apiKey: string) {\r\n        this.username = username;\r\n        this.apiKey = apiKey;\r\n        this.host = \"https://snipt.net/api\";\r\n        this.scope = \"private\";\r\n    }\r\n    \r\n    public getAllBlogPostsAsync(): MPromise<Entities.Snipt[]> {\r\n        \r\n        var resultPromise: MPromise<Entities.Snipt[]> = new MPromise<Entities.Snipt[]>();\r\n        \r\n        var requestUrl: string = this.host;\r\n\t\t\trequestUrl += '/';\r\n\t\t\trequestUrl += this.scope;\r\n\t\t\trequestUrl += '/snipt'; // Refacto here\r\n\t\t\trequestUrl += '/?';\r\n\t\t\trequestUrl += 'username=';\r\n\t\t\trequestUrl += this.username;\r\n\t\t\trequestUrl += '&api_key=';\r\n\t\t\trequestUrl += this.apiKey;\r\n\t\t\trequestUrl += '&format=json';\r\n\t\t\r\n\t\t\r\n        var xhr: XMLHttpRequest = new XMLHttpRequest();\r\n        xhr.onreadystatechange = (ev) => {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                var response = JSON.parse(xhr.responseText);\r\n                \r\n                var posts: Entities.Snipt[] = [];\r\n                var elementsToRemove: number[];\r\n                for (var p in response.objects) {\r\n                    if (response.objects.hasOwnProperty(p)) {\r\n                        var element: Entities.Snipt = response.objects[p];\r\n                        \r\n                        if (element.blog_post) {\r\n                            posts.push(element);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                resultPromise.validate(posts);\r\n            }\r\n        }\r\n        xhr.onerror = (ev) => {\r\n            resultPromise.reject(new Error(\"Error ejecutando la petici√≥n HTTP\"));\r\n        }\r\n        \r\n        xhr.open('GET', requestUrl, true);\r\n        xhr.send(null);\r\n        \t\t\r\n\t\treturn resultPromise;\r\n        \r\n    }\r\n    \r\n}"],"sourceRoot":"/source/"}